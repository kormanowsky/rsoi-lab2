version: "3"
services:
  cars: 
    depends_on:
      - cars-postgres
    image: cars:latest
    container_name: cars
    pull_policy: never 
    build: 
      args:
        SERVICE: cars
    environment: 
      CONN_STRING: ${CARS_STORAGE_CONN_STRING}
    restart: on-failure
    ports: 
      - "8070:8070"

  cars-postgres:
    image: library/postgres:13
    container_name: cars-postgres
    restart: on-failure
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: postgres
    volumes:
      - cars-postgres-data:/var/lib/postgresql/data
      - ./postgres/cars/:/docker-entrypoint-initdb.d/

  rental: 
    depends_on:
      - rental-postgres
    image: rental:latest
    container_name: rental
    pull_policy: never 
    build: 
      args:
        SERVICE: rental 
    restart: on-failure
    ports: 
      - "8060:8060"
  
  rental-postgres:
    image: library/postgres:13
    container_name: rental-postgres
    restart: on-failure
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: postgres
    volumes:
      - rental-postgres-data:/var/lib/postgresql/data
      - ./postgres/rental/:/docker-entrypoint-initdb.d/

  payment: 
    depends_on: 
      - payment-postgres
    image: payment:latest
    container_name: payment
    pull_policy: never 
    build: 
      args:
        SERVICE: payment 
    environment:
      CONN_STRING: ${PAYMENT_STORAGE_CONN_STRING}
    restart: on-failure
    ports: 
      - "8050:8050"

  payment-postgres:
    image: library/postgres:13
    container_name: payment-postgres
    restart: on-failure
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: postgres
    volumes:
      - payment-postgres-data:/var/lib/postgresql/data
      - ./postgres/payment/:/docker-entrypoint-initdb.d/

  gateway: 
    depends_on:
      - cars
      - rental
      - payment
    image: gateway:latest
    container_name: gateway
    pull_policy: never 
    build: 
      args:
        SERVICE: gateway 
    environment:
      CARS_SERVICE_URL: http://cars:8070/api/v1/cars/
    restart: on-failure
    ports: 
      - "8080:8080"

volumes:
  cars-postgres-data:
  rental-postgres-data:
  payment-postgres-data:
